===========================
How to Use 7-base_geometry.py
===========================

Using class BaseGeometry
--------------------------

Import class from module:

        >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Check type:

        >>> bg = BaseGeometry()
	>>> type(bg)
	<class '7-base_geometry.BaseGeometry'>

Check area exception:

	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Check area with args:

	>>> bg.area(1)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given

Check integer validator passing a integer:

	>>> bg.integer_validator("int", 1)

Check for int == 0:

	>>> bg.integer_validator("integer", 0)
	Traceback (most recent call last):
	...
	ValueError: integer must be greater than 0

Check for int < 0;

	>>> bg.integer_validator("integer", -5)
	Traceback (most recent call last):
	...
        ValueError: integer must be greater than 0

Check for non-integer types:

	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
	...
        TypeError: bool must be an integer

	>>> bg.integer_validator("float", 3.2)
	Traceback (most recent call last):
	...
	TypeError: float must be an integer

	>>> bg.integer_validator("string", "Lex")
	Traceback (most recent call last):
	...
	TypeError: string must be an integer

	>>> bg.integer_validator("list", [3, 4])
	Traceback (most recent call last):
	TypeError: list must be an integer

	>>> bg.integer_validator("dict", {3, 4})
	Traceback (most recent call last):
	TypeError: dict must be an integer

	>>> bg.integer_validator("tuple", (1,2))
	Traceback (most recent call last):
	TypeError: tuple must be an integer

	>>> bg.integer_validator("None", None)
	Traceback (most recent call last):
	TypeError: None must be an integer

Check for no arguments to integer_validator:
	>>> bg.integer_validator()
	Traceback (most recent call last):
        ...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Check for only 1 argument to integer_validator:
	>>> bg.integer_validator("int")
	Traceback (most recent call last):
        ...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Check for too many arguments:
	>>> bg.integer_validator("integer", 1, 2)
	Traceback (most recent call last):
        ...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given
