===========================
How to Use 0-add_integer.py
===========================

Using add_integer(a, b=98)
--------------------------

Import funtion from module:

       >>> add_integer = __import__("0-add_integer").add_integer

Check with int values:

       >>> add_integer(3, 8)
       11

       >>> add_integer(-3, 8)
       5

Check with float and/or int values:

       >>> add_integer(2.0, 6)
       8

       >>> add_integer(2, 6.4)
       8

       >>> add_integer(2.1, 6.4)
       8

Check default b (98) value:

       >>> add_integer(2)
       100

Check non-int and non-float values:

       >>> add_integer("Alex", 44)
       Traceback (most recent call last):
       TypeError: a must be an integer

       >>> add_integer(44, "Alex")
       Traceback (most recent call last):
       TypeError: b must be an integer

       >>> add_integer("Alex", "Alex")
       Traceback (most recent call last):
       TypeError: a must be an integer

       >>> add_integer("Alex")
       Traceback (most recent call last):
       TypeError: a must be an integer

       >>> add_integer(None)
       Traceback (most recent call last):
       TypeError: a must be an integer

       >>> add_integer(5, None)
       Traceback (most recent call last):
       TypeError: b must be an integer

Check infinity value:

       >>> add_integer(float('inf'))
       Traceback (most recent call last):
       OverflowError: cannot convert float infinity to integer

       >>> add_integer(15, float('inf'))
       Traceback (most recent call last):
       OverflowError: cannot convert float infinity to integer
